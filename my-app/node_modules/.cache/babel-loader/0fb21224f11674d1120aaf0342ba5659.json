{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\john mokate\\\\Desktop\\\\codingpractice\\\\MentorshipProjects\\\\expense-tracker-app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\john mokate\\\\Desktop\\\\codingpractice\\\\MentorshipProjects\\\\expense-tracker-app\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Expense from \"./components/Expense\";\nimport ListOfAddedExpenses from \"./components/ListOfAddedExpenses\";\nimport AddedExpense from \"./components/AddedExpense\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenses: [],\n      expense: {\n        type: \"\",\n        name: \"\",\n        date: \"\",\n        amount: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addExpenseToList = this.addToExpenseArray.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(\"changed\");\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n    const expense = _objectSpread({}, this.state.expense);\n\n    expense[name] = value; //console.log(name);\n    //console.log(value);\n\n    this.setState({\n      expense\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const entireExpenseObject = _objectSpread({}, this.state.expense);\n\n    entireExpenseObject.id = Date.now(); //get updated version of state\n    // entireExpenseObject.push(this.state.expenses);\n    // this.setState({ expenses: entireExpenseObject });\n\n    console.log(entireExpenseObject); // console.log(this.state.expenses);\n\n    this.addToExpenseArray(entireExpenseObject);\n  }\n\n  addToExpenseArray(event) {\n    console.log(\"expense added\"); //get expense array here\n\n    const addedExpenses = _objectSpread({}, this.state.expenses); //pull newest expense\n    //const newestExpense = addedExpenses.length - 1;\n    //add it to the list\n\n\n    this.setState(prevState => ({\n      expenses: [...(prevState.expenses, {\n        event\n      })]\n    }));\n    console.log(addedExpenses);\n    console.log(this.state.expenses);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Expense, {\n      expense: this.state.expense,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(ListOfAddedExpenses, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(AddedExpense, {\n      expense: this.state.expense,\n      addExpense: this.addToExpenseArray //handleChange={this.handleChange}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/john mokate/Desktop/codingpractice/MentorshipProjects/expense-tracker-app/my-app/src/App.js"],"names":["React","Header","Expense","ListOfAddedExpenses","AddedExpense","App","Component","constructor","props","state","expenses","expense","type","name","date","amount","handleChange","bind","handleSubmit","addExpenseToList","addToExpenseArray","event","target","value","setState","preventDefault","entireExpenseObject","id","Date","now","console","log","addedExpenses","prevState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Expense from \"./components/Expense\";\nimport ListOfAddedExpenses from \"./components/ListOfAddedExpenses\";\nimport AddedExpense from \"./components/AddedExpense\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expenses: [],\n      expense: {\n        type: \"\",\n        name: \"\",\n        date: \"\",\n        amount: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addExpenseToList = this.addToExpenseArray.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(\"changed\");\n    const { name, value } = event.target;\n    const expense = { ...this.state.expense };\n    expense[name] = value;\n    //console.log(name);\n    //console.log(value);\n    this.setState({\n      expense\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const entireExpenseObject = { ...this.state.expense };\n    entireExpenseObject.id = Date.now();\n    //get updated version of state\n    // entireExpenseObject.push(this.state.expenses);\n    // this.setState({ expenses: entireExpenseObject });\n    console.log(entireExpenseObject);\n    // console.log(this.state.expenses);\n    this.addToExpenseArray(entireExpenseObject);\n  }\n\n  addToExpenseArray(event) {\n    console.log(\"expense added\");\n    //get expense array here\n    const addedExpenses = { ...this.state.expenses };\n    //pull newest expense\n    //const newestExpense = addedExpenses.length - 1;\n    //add it to the list\n    this.setState(prevState => ({\n      expenses: [...(prevState.expenses, { event })]\n    }));\n    console.log(addedExpenses);\n    console.log(this.state.expenses);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Expense\n          expense={this.state.expense}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <ListOfAddedExpenses />\n        <AddedExpense\n          expense={this.state.expense}\n          addExpense={this.addToExpenseArray}\n          //handleChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}